<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://xuedengkui.github.io/atom.xml" rel="self"/>
  
  <link href="https://xuedengkui.github.io/"/>
  <updated>2021-06-12T08:45:22.869Z</updated>
  <id>https://xuedengkui.github.io/</id>
  
  <author>
    <name>xuedengkui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>day01</title>
    <link href="https://xuedengkui.github.io/2021/06/12/%E7%88%AC%E8%99%ABday01/"/>
    <id>https://xuedengkui.github.io/2021/06/12/%E7%88%AC%E8%99%ABday01/</id>
    <published>2021-06-12T08:05:29.000Z</published>
    <updated>2021-06-12T08:45:22.869Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.notion.so/day01-f52b64e75ab1487884f3e304e7a2dbed">爬虫day01</a> <a href="https://www.notion.so/day02-6841d458f3a04e5bbaaa33d7ac8097c9">爬虫day02</a> <a href="https://www.notion.so/day03-b7df9f5f94de479e9d985b5a27712c01">爬虫day03</a> <a href="https://www.notion.so/day04-a521362c3f314a79b38c14ff16b805b9">爬虫day04</a> <a href="https://www.notion.so/day05-42df8ecbe7f54e82afa1930f170f4cb1">爬虫day05</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参考知识：小袁取经爬虫篇</span><br><span class="line">爬虫本质是模拟浏览器发出请求，获取相应的数据。模拟浏览器请求用到Request，selenium，获取数据使用bs4，使用scrapy框架加速开发</span><br><span class="line">方法：先爬取不需要登录就可以获取的数据</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/xiaoyuanqujing/p/11805679.html">老男孩it教育</a></p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/25420e74-7aaf-46bc-bb0f-ea20591b0244/requests.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/25420e74-7aaf-46bc-bb0f-ea20591b0244/requests.png"></p><h1 id="昨日回顾"><a href="#昨日回顾" class="headerlink" title="昨日回顾"></a><strong>昨日回顾</strong></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1 一台机器：自己的服务器，比较多  用了云服务器，很多</span><br><span class="line">2 mysql，redis，nginx，uwsgi，python</span><br><span class="line">3 lnmp：linux，nginx，mysql，php/python</span><br><span class="line">4 nginx ，apache，uwsgi，gunicorn，php，jboss，tomcat，weblogic</span><br><span class="line">    -nginx ，apache，IIS：http的转发</span><br><span class="line"></span><br><span class="line">    -uwsgi（c语言写的），gunicorn（python写的）:符合WSGI协议的web服务器，把http请求，转成python语言能识别的字典。。</span><br><span class="line">    -tomcat（免费），jboss（收费）：等同于咱们的uwsgi，符合javaweb的协议</span><br><span class="line">    -php（服务器）：等同于咱们的uwsgi，符合php的协议</span><br><span class="line">5 mysql安装：rpm包安装</span><br><span class="line">6 redis安装：源码安装</span><br><span class="line">7 nginx安装：源码安装（yum）</span><br><span class="line">8 python安装：源码安装（yum安装） yum install pyton3</span><br><span class="line">9 vue项目上线：npm run build---》index.html--&gt;传到服务器--》使用nginx代理</span><br><span class="line">10 djago上线+uwsgi（虚拟和真实都装，运行在虚拟环境运行）</span><br><span class="line">    -把依赖的模块装上（坑特多）</span><br><span class="line">    -收集静态文件（前后端混合开发，必须做）</span><br><span class="line">    -wusgi的配置xml， ini</span><br><span class="line">    -ps -aux |grep uwsgi</span><br><span class="line">    -8000端口访问不到可能存在的问题</span><br><span class="line">        -阿里云限制了（安全组8000端口没开）</span><br><span class="line">        -只要服务器监听着8000端口，一定响应（ngix跑着）</span><br><span class="line">        -nginx转发给uwsgi监听的8808端口（是不是被uwsgi监听着）</span><br><span class="line">        -uwsgi压根没跑起来</span><br><span class="line">        -uwsgi起来了，代码内部报错</span><br><span class="line">        -代码内部报错（数据库有问题）</span><br></pre></td></tr></table></figure><h1 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a><strong>今日内容</strong></h1><h2 id="1-爬虫总课程介绍"><a href="#1-爬虫总课程介绍" class="headerlink" title="1 爬虫总课程介绍"></a><strong>1 爬虫总课程介绍</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">request模块：发送请求，获取请求和响应数据</span><br><span class="line">bs4    模块：获取标签，文本和属性等</span><br><span class="line">selenium模块：操作浏览器，js部分，实现登录，输入框输入等操作     </span><br><span class="line"></span><br><span class="line">1 介绍爬虫</span><br><span class="line">2 urilib3（内置，不好用），requests--模拟发送http请求</span><br><span class="line">3 Beautifulsoup解析，xpath解析</span><br><span class="line">4 selenium模块，操作浏览器</span><br><span class="line">5 Mongodb</span><br><span class="line">6 反爬：代理池，cookie池，请求头中：user-agent，refer，js逆向</span><br><span class="line">7 爬虫框架scrapy，爬虫界的django</span><br><span class="line">8 scrapy-redis分布式爬虫</span><br><span class="line">9 模拟登陆网站</span><br><span class="line">10 爬取视频，爬肯德基门店地址，爬红楼梦书</span><br><span class="line">11 验证码破解（打码平台：超级鹰）</span><br><span class="line">12 破解12306</span><br><span class="line">13 抓包工具的使用（fiddler，charls）</span><br><span class="line">14 安卓app的爬取，逆向</span><br></pre></td></tr></table></figure><h2 id="2-爬虫介绍"><a href="#2-爬虫介绍" class="headerlink" title="2 爬虫介绍"></a><strong>2 爬虫介绍</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 爬虫：网络蜘蛛</span><br><span class="line">2 爬虫本质：模拟浏览器发送请求（requests，selenium）-&gt;下载网页代码-&gt;只提取有用的数据（bs4，xpath，re）-&gt;存放于数据库或文件中（文件，excel，mysql，redis，mongodb）</span><br><span class="line">3 发送请求：请求地址（浏览器调试，抓包工具），请求头（难），请求体（难），请求方法</span><br><span class="line">4 拿到响应：拿到响应体（json格式，xml格式，html格式（bs4,xpath），加密的未知格式(需要解密)）</span><br><span class="line">5 入库：Mongodb（json格式数据）</span><br><span class="line">6 性能高一些（多线程，多进程，协程），只针对与python语言的cpython解释器（GIL：同一时刻只能由一个线程在执行）</span><br><span class="line">    -io密集型：用线程，</span><br><span class="line">    -计算密集型：用进程，需要调度cpu</span><br><span class="line">7 scrapy框架处理了性能</span><br></pre></td></tr></table></figure><h2 id="3-requests模块使用"><a href="#3-requests模块使用" class="headerlink" title="3 requests模块使用"></a><strong>3 requests模块使用</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">1 安装：pip3 install requests</span><br><span class="line">2 图片防盗链：referer</span><br><span class="line">3 代码</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 发送get请求</span></span><br><span class="line"><span class="comment"># res是python的对象，对象里，响应头，响应体。。。。</span></span><br><span class="line"><span class="comment"># header = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36&#x27;,</span></span><br><span class="line"><span class="comment">#     &#x27;referer&#x27;: &#x27;&lt;https://www.mzitu.com/225078/2&gt;&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># # res = requests.get(&#x27;&lt;https://www.mzitu.com/&gt;&#x27;, headers=header)</span></span><br><span class="line"><span class="comment"># # print(res.text)</span></span><br><span class="line"><span class="comment"># res1 = requests.get(&#x27;&lt;https://i3.mmzztt.com/2020/03/14a02.jpg&gt;&#x27;, headers=header)</span></span><br><span class="line"><span class="comment"># print(res1.text)</span></span><br><span class="line"><span class="comment"># # print(res1.content)  # 二进制内容</span></span><br><span class="line"><span class="comment">#图片以文件流的形式保存</span></span><br><span class="line"><span class="comment"># with open(&#x27;a.jpg&#x27;, &#x27;wb&#x27;)as f:</span></span><br><span class="line"><span class="comment">#     for line in res1.iter_content():</span></span><br><span class="line"><span class="comment">#         f.write(line)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 请求地址中携带数据(两种方式，推荐第二种)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># from urllib.parse import urlencode,unquote  # url的编码和解码</span></span><br><span class="line"><span class="comment"># print(unquote(&#x27;%E7%BE%8E%E5%A5%B3&#x27;))</span></span><br><span class="line"><span class="comment"># %E7%BE%8E%E5%A5%B3</span></span><br><span class="line"><span class="comment"># header = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36&#x27;,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># # res=requests.get(&#x27;&lt;https://www.baidu.com/s?wd=美女&gt;&#x27;,headers=header)</span></span><br><span class="line"><span class="comment"># res=requests.get(&#x27;&lt;https://www.baidu.com/s&#x27;,headers=header,params=&#123;&#x27;wd&#x27;:&#x27;美女&gt;&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># print(res.url)</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 请求带cookie(两种方式)</span></span><br><span class="line"><span class="comment"># 方式一，在header中放</span></span><br><span class="line"><span class="comment"># header = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36&#x27;,</span></span><br><span class="line"><span class="comment">#     &#x27;cookie&#x27;:&#x27;key=asdfasdfasdfsdfsaasdf;key2=asdfasdf;key3=asdfasdf&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># res=requests.get(&#x27;&lt;http://127.0.0.1:8000/index/&gt;&#x27;,headers=header)</span></span><br><span class="line"><span class="comment"># 方式二：</span></span><br><span class="line"><span class="comment"># header = &#123;</span></span><br><span class="line"><span class="comment">#     &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36&#x27;,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># # cookies是一个字典或者CookieJar对象</span></span><br><span class="line"><span class="comment"># res=requests.get(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,headers=header,cookies=&#123;&#x27;key&#x27;:&#x27;asdfasdf&gt;&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"><span class="comment"># 问：你的网站从哪取出cookie来</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 发送post请求，携带数据（urlencoded和json）</span></span><br><span class="line"><span class="comment"># res=requests.post(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,data=&#123;&#x27;name&#x27;:&#x27;lqz&gt;&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=requests.post(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,json=&#123;&#x27;age&gt;&#x27;:1,&#125;,)</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 自动携带cookie</span></span><br><span class="line"><span class="comment"># session=requests.session()</span></span><br><span class="line"><span class="comment"># res=session.post(&#x27;&lt;http://127.0.0.1:8000/index/&gt;&#x27;)  # 假设这个请求登录了</span></span><br><span class="line"><span class="comment"># res1=session.get(&#x27;&lt;http://127.0.0.1:8000/order/&gt;&#x27;)  # 现在不需要手动带cookie，session会帮咱处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6 response对象</span></span><br><span class="line"><span class="comment"># respone=requests.post(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,data=&#123;&#x27;name&#x27;:&#x27;lqz&gt;&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># # print(respone.text)  # 响应的文本</span></span><br><span class="line"><span class="comment"># print(respone.content)  # 响应体的二进制</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(respone.status_code)  # 响应状态码</span></span><br><span class="line"><span class="comment"># print(respone.headers)    # 响应头</span></span><br><span class="line"><span class="comment"># print(respone.cookies)   # cookie</span></span><br><span class="line"><span class="comment"># print(respone.cookies.get_dict()) #  把cookie转成字典</span></span><br><span class="line"><span class="comment"># print(respone.cookies.items())  # key和value</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(respone.url)        # 请求的url</span></span><br><span class="line"><span class="comment"># print(respone.history)   #[]放重定向之前的地址</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(respone.encoding)  # 响应的编码方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># respone.iter_content()  # 图片，视频，大文件，一点一点循环取出来</span></span><br><span class="line"><span class="comment"># for line in respone.iter_content():</span></span><br><span class="line"><span class="comment">#     f.write(line)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7 编码问题</span></span><br><span class="line"><span class="comment"># res=requests.get(&#x27;&lt;http://www.autohome.com/news&gt;&#x27;)</span></span><br><span class="line"><span class="comment"># # 一旦打印出来出现乱码问题</span></span><br><span class="line"><span class="comment"># # 方式一</span></span><br><span class="line"><span class="comment"># # res.encoding=&#x27;gb2312&#x27;</span></span><br><span class="line"><span class="comment"># # 方式二</span></span><br><span class="line"><span class="comment"># res.encoding=res.apparent_encoding</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8 解析json</span></span><br><span class="line"><span class="comment"># import json</span></span><br><span class="line"><span class="comment"># respone=requests.post(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,data=&#123;&#x27;name&#x27;:&#x27;lqz&gt;&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># # print(type(respone.text))  # 响应的文本</span></span><br><span class="line"><span class="comment"># # print(json.loads(respone.text))</span></span><br><span class="line"><span class="comment"># print(respone.json())  # 相当于上面那句话</span></span><br><span class="line"><span class="comment"># print(type(respone.json()))  # 相当于上面那句话</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 9 高级用法之ssl（了解）</span></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment"># respone=requests.get(&#x27;&lt;https://www.12306.cn&gt;&#x27;) #不验证证书,报警告,返回200</span></span><br><span class="line"><span class="comment"># print(respone.status_code)</span></span><br><span class="line"><span class="comment"># 使用证书，需要手动携带</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment"># respone=requests.get(&#x27;&lt;https://www.12306.cn&gt;&#x27;,</span></span><br><span class="line"><span class="comment">#                      cert=(&#x27;/path/server.crt&#x27;,</span></span><br><span class="line"><span class="comment">#                            &#x27;/path/key&#x27;))</span></span><br><span class="line"><span class="comment"># print(respone.status_code)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10 高级用法：使用代理</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># respone=requests.get(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,proxies=&#123;&#x27;http&#x27;:&#x27;代理的地址和端口号&gt;&#x27;,&#125;)</span></span><br><span class="line"><span class="comment"># 代理，免费代理，收费代理花钱买</span></span><br><span class="line"><span class="comment"># 代理池：列表放了一堆代理ip，每次随机取一个，再发请求就不会封ip了</span></span><br><span class="line"><span class="comment"># 高匿和透明代理？如果使用高匿代理，后端无论如何拿不到你的ip，使用透明，后端能够拿到你的ip</span></span><br><span class="line"><span class="comment"># 后端如何拿到透明代理的ip，  后端：X-Forwarded-For</span></span><br><span class="line"><span class="comment"># respone=requests.get(&#x27;&lt;https://www.baidu.com/&#x27;,proxies=&#123;&#x27;http&#x27;:&#x27;27.46.20.226:8888&gt;&#x27;,&#125;)</span></span><br><span class="line"><span class="comment"># print(respone.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 11 超时设置</span></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment"># respone=requests.get(&#x27;&lt;https://www.baidu.com&gt;&#x27;,</span></span><br><span class="line"><span class="comment">#                      timeout=0.0001)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 12 认证设置（你见不到了）</span></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment"># r=requests.get(&#x27;xxx&#x27;,auth=(&#x27;user&#x27;,&#x27;password&#x27;))</span></span><br><span class="line"><span class="comment"># print(r.status_code)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 13 异常处理</span></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment"># from requests.exceptions import * #可以查看requests.exceptions获取异常类型</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># try:</span></span><br><span class="line"><span class="comment">#     r=requests.get(&#x27;&lt;http://www.baidu.com&gt;&#x27;,timeout=0.00001)</span></span><br><span class="line"><span class="comment"># # except ReadTimeout:</span></span><br><span class="line"><span class="comment"># #     print(&#x27;===:&#x27;)</span></span><br><span class="line"><span class="comment"># except Exception as e:</span></span><br><span class="line"><span class="comment">#     print(e)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 14 上传文件</span></span><br><span class="line"><span class="comment"># res=requests.post(&#x27;&lt;http://127.0.0.1:8000/index/&#x27;,files=&#123;&#x27;myfile&#x27;:open(&#x27;a.jpg&#x27;,&#x27;rb&gt;&#x27;)&#125;)</span></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br></pre></td></tr></table></figure><h2 id="4-模拟登陆华华手机网站"><a href="#4-模拟登陆华华手机网站" class="headerlink" title="4 模拟登陆华华手机网站"></a><strong>4 模拟登陆华华手机网站</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模拟登录网站，先拿错误的账号密码做测试，看它发送的请求，由此看出给http://www.aa7a.cn/user.php发送post请求，通过之后重定向到首页</span></span><br><span class="line"><span class="comment">#&lt;http://www.aa7a.cn/&gt;</span></span><br><span class="line">import requests</span><br><span class="line">session=requests.session()</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;616564099@qq.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;lqz123&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;captcha&#x27;</span>: <span class="string">&#x27;zdu4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;remember&#x27;</span>: 1,</span><br><span class="line">    <span class="string">&#x27;ref&#x27;</span>: <span class="string">&#x27;&lt;http://www.aa7a.cn/user.php?act=logout&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;act&#x27;</span>: <span class="string">&#x27;act_login&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">rest = session.post(<span class="string">&#x27;&lt;http://www.aa7a.cn/user.php&gt;&#x27;</span>,data=data)</span><br><span class="line"><span class="built_in">print</span>(rest.text)</span><br><span class="line"><span class="comment"># 拿到cookie</span></span><br><span class="line">cookie=rest.cookies</span><br><span class="line"><span class="built_in">print</span>(cookie)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 携带着cookies，表示登录了，页面中会有我们的用户信息616564099@qq.com</span></span><br><span class="line">rest1=session.get(<span class="string">&#x27;&lt;http://www.aa7a.cn/index.php&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># rest1=requests.get(&#x27;&lt;http://www.aa7a.cn/index.php&gt;&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;616564099@qq.com&#x27;</span> <span class="keyword">in</span> rest1.text)</span><br></pre></td></tr></table></figure><h2 id="5-爬取梨视频"><a href="#5-爬取梨视频" class="headerlink" title="5 爬取梨视频"></a><strong>5 爬取梨视频</strong></h2><p><a href="https://www.jianshu.com/p/925006546a22">selenium之爬取梨视频</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&lt;https://www.pearvideo.com/&gt;</span></span><br><span class="line"><span class="comment"># 爬取梨视频</span></span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">res=requests.get(<span class="string">&#x27;&lt;https://www.pearvideo.com/category_loading.jsp?reqType=5&amp;categoryId=1&amp;start=0&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line">re_video=<span class="string">&#x27;&lt;a href=&quot;(.*?)&quot; class=&quot;vervideo-lilink actplay&quot;&gt;&#x27;</span></span><br><span class="line">video_urls=re.findall(re_video,res.text)</span><br><span class="line"><span class="comment"># &lt;https://www.pearvideo.com/&gt;</span></span><br><span class="line"><span class="comment"># print(video_urls)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> video <span class="keyword">in</span> video_urls:</span><br><span class="line">    url=<span class="string">&#x27;&lt;https://www.pearvideo.com/&#x27;</span>+video&gt;</span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    <span class="comment"># 向视频详情发送get请求</span></span><br><span class="line">    res_video=requests.get(url)</span><br><span class="line">    <span class="comment"># print(res_video.text)</span></span><br><span class="line">    <span class="comment"># break</span></span><br><span class="line">    re_video_mp4=<span class="string">&#x27;hdUrl=&quot;&quot;,sdUrl=&quot;&quot;,ldUrl=&quot;&quot;,srcUrl=&quot;(.*?)&quot;,vdoUrl=srcUrl,skinRes&#x27;</span></span><br><span class="line">    video_url=re.findall(re_video_mp4,res_video.text)[0]</span><br><span class="line">    <span class="built_in">print</span>(video_url)</span><br><span class="line">    video_name=video_url.rsplit(<span class="string">&#x27;/&#x27;</span>,1)[-1]</span><br><span class="line">    <span class="built_in">print</span>(video_name)</span><br><span class="line">    res_video_content=requests.get(video_url)</span><br><span class="line">    with open(video_name,<span class="string">&#x27;wb&#x27;</span>) as f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> res_video_content.iter_content():</span><br><span class="line">            f.write(line)</span><br><span class="line">&lt;a href=<span class="string">&quot;video_1731525&quot;</span> class=<span class="string">&quot;vervideo-lilink actplay&quot;</span> target=<span class="string">&quot;_blank&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="作业"><a href="#作业" class="headerlink" title="作业"></a><strong>作业</strong></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 使用requests代理向自己的django项目发送请求，django项目打印出客户端的ip地址</span><br><span class="line">2 课上代码敲一遍</span><br><span class="line">3 爬取妹子图图片（用爬取京东商品的方法爬取全部信息selenium+bs4或xpath）</span><br><span class="line">4 期中架构（人脸识别登录，邮箱认证（itsdangerous））</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.notion.so/day01-f52b64e75ab1487884f3e304e7a2dbed&quot;&gt;爬虫day01&lt;/a&gt; &lt;a href=&quot;https://www.notion.so/day02-6841d458f3a04e5bb</summary>
      
    
    
    
    <category term="爬虫" scheme="https://xuedengkui.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="day01" scheme="https://xuedengkui.github.io/tags/day01/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xuedengkui.github.io/2021/03/24/hello-world/"/>
    <id>https://xuedengkui.github.io/2021/03/24/hello-world/</id>
    <published>2021-03-24T13:48:05.228Z</published>
    <updated>2021-03-24T13:48:05.228Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
